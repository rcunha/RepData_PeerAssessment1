library(KernSmooth)
ls()
getwd()
install.package("ggplot2")
install.packages("ggplot2")
library(ggplot2)
?ggplot
dir.create("data", showWarnings=FALSE)   # create folder ./data if needed
unzip("activity.zip",exdir="data/")   # unzip the provided zip data file
df <- read.csv("data/activity.csv", header=TRUE, na.strings="NA")   # load data from csv file
df$date <- as.Date(df$date,"%Y-%m-%d")   # column date as type Date
df$interval <- sprintf("%04d",df$interval) # column interval as string
getwd()
getwd("data-science/RepData_PeerAssessment1/")
setwd("data-science/RepData_PeerAssessment1/")
dir.create("data", showWarnings=FALSE)   # create folder ./data if needed
unzip("activity.zip",exdir="data/")   # unzip the provided zip data file
df <- read.csv("data/activity.csv", header=TRUE, na.strings="NA")   # load data from csv file
df$date <- as.Date(df$date,"%Y-%m-%d")   # column date as type Date
df$interval <- sprintf("%04d",df$interval) # column interval as string
head(df)
library(plyr)   # load library plyr
dft <- ddply(df, "date", summarise, steps = sum(steps, na.rm=TRUE))   # daily data summary
hist(dft$steps, main="Total Daily Steps", xlab="Steps")
mean_steps <- mean(dft$steps)
median_steps <- median(dft$steps)
library(plyr)   # load library plyr
df5 <- ddply(df, "interval", summarise, steps = sum(steps, na.rm=TRUE))   # interval data summary
hist(df5$steps)
plot(df5$interval, df5$steps)
plot(df5$interval, df5$steps, type='l')
plot(df5$interval, df5$steps, type="l")
?plot
ggplot(data=df5, aes(x=interval, y=steps)) + geom_line()
?qplot
qplot(interval, steps, df5)
qplot(df5$interval, df5$steps, df5)
qplot(df5$interval, df5$steps, df5, geom="line")
qplot(df5$interval, df5$steps, df5, geom="l")
head(df5)
class(df5)
str(df5)
qplot(factor(df5$interval), df5$steps, df5, geom="l")
qplot(factor(df5$interval), df5$steps, df5, geom="line")
qplot(factor(df5$interval), df5$steps, df5)
class(df5)
str(df)
plot(df5$interval, df5$steps)
plot(df5$interval, df5$steps, type=l)
plot(df5$interval, df5$steps, type="l")
plot(factor(df5$interval), df5$steps, type="l")
plot(df5$interval, df5$steps, type="l")
?plot
ggplot(data=df5, aes(x=interval, y=steps)) + geom_line()
ggplot(data=df5, aes(x=interval, y=steps, group=NULL)) + geom_line()
ggplot(data=df5, aes(x=interval, y=steps, group=)) + geom_line()
df5 <- ddply(df, "interval", summarise, steps = mean(steps, na.rm=TRUE))   # interval data
ggplot(data=df5, aes(x=interval, y=steps, group=NULL)) + geom_line()
plot(df5$interval, df5$steps, type="l")
qplot(factor(df5$interval), df5$steps, df5)
qplot(factor(df5$interval), df5$steps, df5, geom="l")
qplot(factor(df5$interval), df5$steps, df5, geom="line")
qplot(factor(df5$interval), aes=c(df5$steps), df5, geom="line")
plot(df5$interval, df5$steps, type="l")
plot(factor(df5$interval), df5$steps, type="l")
df <- read.csv("data/activity.csv", header=TRUE, na.strings="NA")   # load data from csv file
df$date <- as.Date(df$date,"%Y-%m-%d")   # column date as type Date
df$interval_s <- sprintf("%04d",df$interval) # column interval as string
library(plyr)   # load library plyr
dft <- ddply(df, "date", summarise, steps = sum(steps, na.rm=TRUE))   # daily data summary
hist(dft$steps, main="Total Daily Steps", xlab="Steps")
df5 <- ddply(df, "interval", summarise, steps = mean(steps, na.rm=TRUE))
head(df5)
str(df5)
hist(df5$steps)
plot(df5$interval, df5$steps)
plot(df5$interval, df5$steps, type="l")
qplot(factor(df5$interval), df5$steps, df5, geom="line")
ggplot(data=df, aes(x=interval, y=steps, group=interval)) + geom_line()
ggplot(data=df, aes(x=interval, y=steps, group=date)) + geom_line()
ggplot(data=df, aes(x=factor(interval), y=steps, group=date)) + geom_line()
ggplot(data=df5, aes(x=interval, y=steps, group=1)) + geom_line()
ggplot(data=df5, aes(x=factor(interval, y=steps, group=1)) + geom_line()
ggplot(data=df5, aes(x=factor(interval), y=steps, group=1)) + geom_line()
ggplot(data=df5, aes(x=factor(interval), y=steps, group=1)) + geom_line() + scale_x_continuous(breaks=1:10)
ggplot(data=df5, aes(x=interval, y=steps, group=1)) + geom_line() + scale_x_continuous(breaks=1:10)
ggplot(data=df5, aes(x=interval, y=steps, group=1)) + geom_line() + scale_x_continuous(breaks=5)
ggplot(data=df5, aes(x=interval, y=steps, group=1)) + geom_line() + scale_x_continuous(breaks=c(0000,0030,0130,0200,0230,0300,0330,0400,0430))
ggplot(data=df5, aes(x=factor(interval), y=steps, group=1)) + geom_line()
g <- ggplot(data=df5, aes(x=factor(interval), y=steps, group=1)) + geom_line()
head df5
head(df5)
head(df)
df[1]
head(df)
df[1,]
df[1,]$date
paste(df[1,]$date,df[1,]$interval_s
)
strptime(paste(df[1,]$date,df[1,]$interval_s),'%Y-%m-%d %H%M')
strptime(paste(df[2,]$date,df[2,]$interval_s),'%Y-%m-%d %H%M')
strptime(df[2,]$interval_s,'%H%M')
str(df5)
df5$int <- strptime(sprintf("%04d",df$interval),'%H%M')
df5$int <- strptime(sprintf("%04d",df5$interval),'%H%M')
str(df5)
head(df5)
g <- ggplot(data=df5, aes(x=factor(interval), y=steps, group=1)) + geom_line()
g
g <- ggplot(data=df5, aes(x=int, y=steps, group=1)) + geom_line()
g
g + scale_x_discrete(formatter = "abbreviate")
g + scale_x(formatter = "abbreviate")
g + scale_x_continuous(formatter = "abbreviate")
start <- ISOdate(2001, 1, 1, tz = "")
d <- data.frame(
day30  = start + round(runif(100, max = 30 * 86400)),
day7  = start + round(runif(100, max = 7 * 86400)),
day   = start + round(runif(100, max = 86400)),
hour10 = start + round(runif(100, max = 10 * 3600)),
hour5 = start + round(runif(100, max = 5 * 3600)),
hour  = start + round(runif(100, max = 3600)),
min10 = start + round(runif(100, max = 10 * 60)),
min5  = start + round(runif(100, max = 5 * 60)),
min   = start + round(runif(100, max = 60)),
sec10 = start + round(runif(100, max = 10)),
y = runif(100)
)
d
qplot(sec10, y, data = d)
str(d)
g
g + scale_x_datetime(breaks = date_breaks("1 hour"))
g + scale_x_datetime(breaks = date_breaks("1 hours"))
g + scale_x_datetime(breaks = date_break("1 hours"))
g + scale_x_datetime(breaks = pretty_breaks())
qplot(min5, y, data = d)
df5$int <- strptime(paste("2001-01-01",sprintf("%04d",df5$interval)),'%Y-%m-%d %H%M')
df5
g <- ggplot(data=df5, aes(x=factor(interval), y=steps, group=1)) + geom_line()
g
g <- ggplot(data=df5, aes(x=interval, y=steps, group=1)) + geom_line()
g
g <- ggplot(data=df5, aes(x=int, y=steps, group=1)) + geom_line()
g
qplot(df5$int, df4$steps, df5, geom="line")
qplot(df5$int, df5$steps, df5, geom="line")
library(scales)
last_plot() + scale_x_datetime(breaks = date_breaks("1 hour")
)
last_plot() + scale_x_datetime(breaks = date_breaks("2 hours")
)
last_plot() + scale_x_datetime(breaks = date_breaks("2 hours") + labels = date_format("%H:%M"))
last_plot() + scale_x_datetime(breaks = date_breaks("2 hours"), labels = date_format("%H:%M"))
df5$int <- strptime(paste("2001-01-01",sprintf("%04d",df5$interval)),'%Y-%m-%d %H%M')
str(df5)
df5[which(max(df5$steps)),]
?which
which.max(df5$steps)
df5[which.max(df5$steps),]
df5[which.max(df5$steps),]$int
date_format(df5[which.max(df5$steps),]$int, "%H:%M")
?date_format
library(scales)
?date_format
date_format(df5[which.max(df5$steps),]$int, "%H:%M")
date_format("%H:%M")
df5[which.max(df5$steps),]$int
dt <- df5[which.max(df5$steps),]$int
format(dt, "%H:%M")
qplot(df5$int, df5$steps, df5, geom="line")
last_plot() + scale_x_datetime(breaks = date_breaks("2 hours"), labels = date_format("%H:%M"))
g <- qplot(df5$int, df5$steps, df5, geom="line")
g + scale_x_datetime(breaks = date_breaks("2 hours"), labels = date_format("%H:%M"))
g + scale_x_datetime(breaks = date_breaks("1 hours"), labels = date_format("%H:%M"))
g + scale_x_datetime(breaks = date_breaks("2 hours"), labels = date_format("%H:%M"))
?qplot
g <- qplot(df5$int, df5$steps, df5, geom="line",xlab="interval")
g + scale_x_datetime(breaks = date_breaks("2 hours"), labels = date_format("%H:%M"))
g <- qplot(df5$int, df5$steps, df5, geom="line",xlab="5-min interval",ylab="average steps taken")
g + scale_x_datetime(breaks = date_breaks("2 hours"), labels = date_format("%H:%M"))
